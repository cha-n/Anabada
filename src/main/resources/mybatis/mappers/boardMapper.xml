<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mysqltest.board.boardMapper">
	<resultMap id="board" type="com.spring.mysqltest.board.dto.BoardDto">
		<result property="board_seq" column="BOARD_SEQ" />
		<result property="board_re_ref" column="BOARD_RE_REF" />
		<result property="board_re_lev" column="BOARD_RE_LEV" />
		<result property="board_re_seq" column="BOARD_RE_SEQ" />
		<result property="board_writer" column="BOARD_WRITER" />
		<result property="board_subject" column="BOARD_SUBJECT" />
		<result property="board_content" column="BOARD_CONTENT" />
		<result property="board_hits" column="BOARD_HITS" />
		<result property="del_yn" column="DEL_YN" />
		<result property="ins_user_id" column="INS_USER_ID" />
		<result property="ins_date" column="INS_DATE" />
		<result property="upd_user_id" column="UPD_USER_ID" />
		<result property="upd_date" column="UPD_DATE" />
		<result property="item" column="item" />
		<result property="locat" column="LOCAT" />
		<result property="SELL_YN" column="SELL_YN" />
		<association property="memberVO" javaType="memberVO">
			<result property="n_name" column="n_name" />
			<result property="profile" column="profile" />
		</association>
		<association property="articleVO" javaType="articleVO">
			<result property="articleNO" column="articleNO" />
			<result property="title" column="title" />		
			<result property="n_name" column="n_name" /> 
			<result property="accepted" column="accepted" />
		</association>
	</resultMap>

	

	<select id="getBoardCnt" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="int">
	
		SELECT COUNT(*)
		FROM TB_BOARD
	
	</select>
	<select id="selectItems" parameterType="int" resultType="String">
		SELECT item 		
		FROM TB_BOARD
		WHERE BOARD_SEQ = #{board_seq}
	</select>
	
     <select id="getBoardList" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="com.spring.mysqltest.board.dto.BoardDto">
    
        SELECT *
        FROM ( 
                SELECT BOARD_SEQ 
                     , BOARD_RE_REF 
                     , BOARD_RE_LEV 
                     , BOARD_RE_SEQ 
                     , BOARD_WRITER 
                     , BOARD_SUBJECT 
                     , BOARD_CONTENT 
                     , BOARD_HITS
                     , DEL_YN 
                     , INS_USER_ID
                     , CAST( DATE_FORMAT( INS_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS INS_DATE
                     , UPD_USER_ID
                     , CAST( DATE_FORMAT( UPD_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS UPD_DATE  
                     , item
                     , LOCAT
               FROM TB_BOARD
               ORDER BY BOARD_RE_REF DESC, BOARD_RE_SEQ ASC, BOARD_SEQ DESC
              ) T1
        LIMIT #{limit} OFFSET #{offset}
    
    </select>
    
    <delete id="updateBoardHits" parameterType="int">
    
        UPDATE TB_BOARD 
           SET BOARD_HITS = BOARD_HITS + 1             
             , UPD_USER_ID = 'NONMEMBER'
             , UPD_DATE = NOW()
         WHERE BOARD_SEQ = #{board_seq}
    
    </delete>
    
    <select id="getBoardDetail" parameterType="int" resultMap="board">
    
        SELECT T1.*
        FROM (
                SELECT B.BOARD_SEQ 
                     , B.BOARD_RE_REF 
                     , B.BOARD_RE_LEV 
                     , B.BOARD_RE_SEQ 
                     , B.BOARD_WRITER 
                     , B.BOARD_SUBJECT 
                     , B.BOARD_CONTENT 
                     , B.BOARD_HITS
                     , B.DEL_YN 
                     , B.INS_USER_ID
                     , CAST( DATE_FORMAT( B.INS_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS INS_DATE
                     , B.UPD_USER_ID
                     , CAST( DATE_FORMAT( B.UPD_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS UPD_DATE
                     ,B.item
                     ,B.LOCAT
	        		 ,B.SELL_YN
	        		 ,M.profile
                FROM TB_BOARD B,v_member M
                WHERE B.BOARD_SEQ = #{board_seq} AND B.BOARD_WRITER=M.n_name
                     
              ) T1        
    
    </select>
        
    <select id="getBoardFileList" parameterType="int" resultType="com.spring.mysqltest.board.dto.BoardFileDto">
    
        SELECT T1.*
        FROM (
                SELECT BOARD_SEQ
                     , FILE_NO
                     , FILE_NAME_KEY
                     , FILE_NAME
                     , FILE_PATH
                     , FILE_SIZE
                     , REMARK
                     , INS_USER_ID
                    , CAST( DATE_FORMAT( INS_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS INS_DATE
                    , UPD_USER_ID
                    , CAST( DATE_FORMAT( UPD_DATE, '%Y-%m-%d %H:%i:%s' ) AS CHAR(19) ) AS UPD_DATE
                FROM TB_BOARD_FILE
                WHERE BOARD_SEQ = #{board_seq}
                AND DEL_YN = 'N'
               <!--  ORDER BY FILE_NO ASC --> 
              ) T1        
            
    </select>
    
    <select id="getBoardReRef" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="int">
    
        SELECT IFNULL(MAX(BOARD_RE_REF), 0) + 1
        FROM TB_BOARD
    
    </select>
    
    <insert id="insertBoard" parameterType="com.spring.mysqltest.board.form.BoardForm">
        
        <selectKey resultType="int" keyProperty="board_seq" order="AFTER">
 
            SELECT LAST_INSERT_ID()
 
        </selectKey>
        
        INSERT 
        INTO TB_BOARD 
        (
                BOARD_RE_REF
              , BOARD_RE_LEV
              , BOARD_RE_SEQ
              , BOARD_WRITER
              , BOARD_SUBJECT
              , BOARD_CONTENT
              , INS_USER_ID
              , INS_DATE
              , UPD_USER_ID
              , UPD_DATE
              , item
              , LOCAT
        ) 
        VALUES 
        (
              #{board_re_ref}
            , 0
            , 0
            , #{board_writer}
            , #{board_subject}
            , #{board_content}
            , 'NONMEMBER'
            , NOW() 
            , 'NONMEMBER'
            , NOW() 
            , #{item}
            , #{locat}
        )
            
    </insert>
    
    <insert id="insertBoardFile" parameterType="com.spring.mysqltest.board.form.BoardFileForm">
    
        <selectKey resultType="int" keyProperty="file_no" order="BEFORE">
            
            SELECT IFNULL(MAX(FILE_NO), 0) + 1 
            FROM TB_BOARD_FILE
            WHERE BOARD_SEQ = #{board_seq}
              
        </selectKey>
                
        INSERT 
        INTO TB_BOARD_FILE
        (
              BOARD_SEQ
            , FILE_NO
            , FILE_NAME_KEY
            , FILE_NAME
            , FILE_PATH
            , FILE_SIZE
            , DEL_YN 
            , INS_USER_ID
            , INS_DATE            
            , UPD_USER_ID
            , UPD_DATE
        )
        VALUES
        (
              #{board_seq}
            , #{file_no}
            , #{file_name_key}
            , #{file_name}
            , #{file_path}
            , #{file_size}
            , 'N'
            , 'NONMEMBER'
            , NOW() 
            , 'NONMEMBER'
            , NOW() 
        )    
        
    </insert>
    
    <insert id="insertBoardFail" parameterType="com.spring.mysqltest.board.form.BoardForm">
    
        INSERT 
        INTO TB_BOARD 
        (
                BOARD_RE_REF
              , BOARD_RE_LEV
              , BOARD_RE_SEQ
              , BOARD_WRITER
              , BOARD_SUBJECT
              , BOARD_CONTENT
              , INS_USER_ID
              , INS_DATE
              , UPD_USER_ID
              , UPD_DATE
              , item
        ) 
        VALUES 
        (
              0
            , 0
            , 0
            , #{board_writer1}
            , #{board_subject}
            , #{board_content}
            , 'NONMEMBER'
            , NOW() 
            , 'NONMEMBER'
            , NOW() 
            , #{item}
        )
    
    </insert>
 
    <delete id="deleteBoard" parameterType="com.spring.mysqltest.board.form.BoardForm">
    
    	DELETE 
		FROM TB_BOARD 
		WHERE BOARD_SEQ = #{board_seq}
    
    </delete>
    
    <delete id="updateBoard" parameterType="com.spring.mysqltest.board.form.BoardForm">
    
        UPDATE TB_BOARD 
           SET BOARD_SUBJECT = #{board_subject}
             , BOARD_CONTENT = #{board_content}
             , UPD_USER_ID = 'NONMEMBER'
             , UPD_DATE = NOW()
             , item= #{item}
             , LOCAT= #{locat}
         WHERE BOARD_SEQ = #{board_seq}
    
    </delete>
    
    <select id="getBoardReplyInfo" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="com.spring.mysqltest.board.dto.BoardDto">
    
        SELECT BOARD_SEQ
             , BOARD_RE_REF
             , BOARD_RE_LEV
             , BOARD_RE_SEQ
        FROM TB_BOARD
        WHERE BOARD_SEQ = #{board_parent_seq}
    
    </select>
    
    <delete id="updateBoardReSeq" parameterType="com.spring.mysqltest.board.form.BoardForm">
    
        UPDATE TB_BOARD
           SET BOARD_RE_SEQ = BOARD_RE_SEQ + 1
             , UPD_USER_ID = 'NONMEMBER'
             , UPD_DATE = NOW()
         WHERE BOARD_RE_REF = #{board_re_ref} 
           AND BOARD_RE_SEQ > #{board_re_seq}
    
    </delete>
    
    <insert id="insertBoardReply" parameterType="com.spring.mysqltest.board.form.BoardForm">
    
        INSERT 
        INTO TB_BOARD 
        (
                BOARD_RE_REF
              , BOARD_RE_LEV
              , BOARD_RE_SEQ
              , BOARD_WRITER
              , BOARD_SUBJECT
              , BOARD_CONTENT
              , INS_USER_ID
              , INS_DATE
              , UPD_USER_ID
              , UPD_DATE
              , item
        ) 
        VALUES 
        (
              #{board_re_ref}
            , #{board_re_lev} + 1
            , #{board_re_seq} + 1
            , #{board_writer}
            , #{board_subject}
            , #{board_content}
            , 'NONMEMBER'
            , NOW() 
            , 'NONMEMBER'
            , NOW() 
            , #{item}
        )
    
    </insert>
    
    <delete id="deleteBoardFile" parameterType="com.spring.mysqltest.board.form.BoardFileForm">
    
    	DELETE FROM TB_BOARD_FILE
    	WHERE BOARD_SEQ = #{board_seq} AND FILE_NO = #{file_no}
    </delete>
    
    <select id="getFileNameKey" parameterType="com.spring.mysqltest.board.form.BoardFileForm" resultType="String">
    	SELECT FILE_NAME_KEY
    	FROM TB_BOARD_FILE
    	WHERE BOARD_SEQ = #{board_seq}
    </select>
    
     <!-- 내글 목록 조회 -->
     <select id="getMyboardList" parameterType="com.spring.mysqltest.member.vo.MemberVO" resultType="com.spring.mysqltest.board.dto.BoardDto">
    	SELECT BOARD_SEQ, BOARD_SUBJECT, SELL_YN
    	FROM TB_BOARD
    	WHERE BOARD_WRITER LIKE #{n_name}
    	ORDER BY BOARD_SEQ DESC
     	LIMIT #{limit}  OFFSET #{offset}  
     </select> 
    
     <!-- 내글 목록 조회(농부) -->
     <select id="getMyFarmerList" parameterType="com.spring.mysqltest.member.vo.MemberVO" resultType="com.spring.mysqltest.seller.vo.ArticleVO">
    	SELECT ARTICLENO, TITLE, N_NAME, ACCEPTED
    	FROM S_BOARD
    	WHERE N_NAME LIKE #{n_name}
    	ORDER BY ARTICLENO DESC
     	LIMIT #{limit}  OFFSET #{offset}  
     </select>    
    
    
    <select id="getMyBoardCnt" parameterType="String" resultType="int">	
		SELECT COUNT(*)
		FROM TB_BOARD
		WHERE BOARD_WRITER LIKE #{n_name}   
	</select>
	
	
	<select id="getMyFarmerCnt" parameterType="String" resultType="int">	
		SELECT COUNT(*)
		FROM S_BOARD
		WHERE N_NAME LIKE #{n_name}   
	</select>
    
     <!-- 내글 목록 삭제-->
     <delete id="deleteMyBoardList" parameterType="com.spring.mysqltest.board.form.BoardForm">
     	DELETE 
     	FROM TB_BOARD
     	WHERE BOARD_SEQ= #{board_seq};
     </delete>   
    
      <!-- 내글 목록 삭제(농부)-->
     <delete id="deleteMyFarmerList" parameterType="com.spring.mysqltest.board.form.BoardForm">
     	DELETE 
     	FROM S_BOARD
     	WHERE ARTICLENO= #{articleNO};
     </delete>     
    
      <!--(판매게시판) 썸네일 -->
    <select id="selectThumbnail" parameterType="int" resultType="com.spring.mysqltest.board.dto.BoardFileDto">
		SELECT FILE_NAME, FILE_NAME_KEY, FILE_PATH
		FROM TB_BOARD_FILE
		WHERE BOARD_SEQ=#{board_seq} AND DEL_YN='N'
		GROUP BY BOARD_SEQ
	</select>
    
    <!--공동구매 게시판 이미지리스트 -->
    <select id="selectsellerThumbnail" parameterType="int" resultType="String">
		SELECT imageFileName
		FROM s_imagefile
		WHERE articleNO = #{articleNO}
		GROUP BY articleNO
	</select>
    
	<!--  판매게시판-keyword로 검색된 목록 -->
	<select id="listSearch" parameterType="com.spring.mysqltest.board.form.BoardForm" resultMap="board">
     
   	  SELECT *
       FROM (
           SELECT *
               FROM TB_BOARD
               WHERE 1=1                   
     			 <include refid="search"></include>    	   
     			  ORDER BY BOARD_SEQ DESC
     		) T1
       LIMIT #{limit}  OFFSET #{offset} 
       
	 </select>
	

	
    <!-- 검색된 게시물 개수 -->
    <select id="countSearch" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="int">
		 SELECT COUNT(*)
 	 	 FROM TB_BOARD
 	 	 WHERE 1=1
   			<include refid="search"></include>
   			<![CDATA[		
   				AND BOARD_SEQ > 0	
   		    ]]>	 
	</select>	
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 'S'.toString()">AND BOARD_SUBJECT like CONCAT('%',#{keyword},'%') </if>
 			<if test="searchType == 'C'.toString()">AND BOARD_CONTENT like CONCAT('%',#{keyword},'%')</if>
  			<if test="searchType == 'L'.toString()">AND LOCAT like CONCAT('%',#{keyword},'%')</if>
 			<if test="searchType == 'SL'.toString()">AND (BOARD_SUBJECT like CONCAT('%',#{keyword},'%')) or (LOCAT like CONCAT('%',#{keyword},'%'))</if>
		</if>
	
	</sql>		
	
	<!--판매자가 쓴 글 조회 기능  -->
	
    <!--판매게시판 - 판매자 글 조회(판매글) -->
     <select id="getSellerBoardList" parameterType="com.spring.mysqltest.board.form.BoardForm" resultType="com.spring.mysqltest.board.dto.BoardDto">
    	SELECT BOARD_SEQ, BOARD_SUBJECT, SELL_YN, BOARD_WRITER
    	FROM TB_BOARD
    	WHERE BOARD_WRITER LIKE #{board_writer} <!--판매자 아이디를 매개변수로 전달받음.  -->
    	ORDER BY BOARD_SEQ DESC
     	LIMIT #{limit}  OFFSET #{offset}  
     </select> 
     
     <select id="getSellerBoardCnt" parameterType="String" resultType="int">	
		SELECT COUNT(*)
		FROM TB_BOARD
		WHERE BOARD_WRITER LIKE #{board_writer}   
	</select>
	
	  <!-- 판매자 글 조회(농부) -->
     <select id="getSellerFarmerList" parameterType="com.spring.mysqltest.seller.vo.ArticleVO" resultType="com.spring.mysqltest.seller.vo.ArticleVO">
    	SELECT ARTICLENO, TITLE, N_NAME, ACCEPTED
    	FROM S_BOARD
    	WHERE N_NAME LIKE #{n_name} AND ACCEPTED='1'
    	ORDER BY ARTICLENO DESC
     	LIMIT #{limit}  OFFSET #{offset}  
     </select>   	
	
    <select id="getWriter" parameterType="int" resultType="String">
    
        SELECT BOARD_WRITER
        FROM TB_BOARD
        WHERE BOARD_SEQ=#{BOARD_SEQ}
    
    </select>

    <update id="updateSell_YN" parameterType="java.util.Map">
    	UPDATE TB_BOARD
    	SET SELL_YN = #{sell_YN}
    	WHERE BOARD_SEQ = #{board_seq}
    </update>
    
      
</mapper>